// Code generated by Fern. DO NOT EDIT.

package client

import (
	core "github.com/gitslim/chunkr-ai-sdk/sdk/go/chunkrai/core"
	health "github.com/gitslim/chunkr-ai-sdk/sdk/go/chunkrai/health"
	internal "github.com/gitslim/chunkr-ai-sdk/sdk/go/chunkrai/internal"
	option "github.com/gitslim/chunkr-ai-sdk/sdk/go/chunkrai/option"
	task "github.com/gitslim/chunkr-ai-sdk/sdk/go/chunkrai/task"
	tasks "github.com/gitslim/chunkr-ai-sdk/sdk/go/chunkrai/tasks"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *internal.Caller
	header  http.Header

	Task   *task.Client
	Tasks  *tasks.Client
	Health *health.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
		Task:   task.NewClient(opts...),
		Tasks:  tasks.NewClient(opts...),
		Health: health.NewClient(opts...),
	}
}
