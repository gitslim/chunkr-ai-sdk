// This file was auto-generated by Fern from our API Definition.

package api

type CreateForm struct {
	ChunkProcessing *ChunkProcessing       `json:"chunk_processing,omitempty"`
	ErrorHandling   *ErrorHandlingStrategy `json:"error_handling,omitempty"`
	// The number of seconds until task is deleted.
	// Expired tasks can **not** be updated, polled or accessed via web interface.
	ExpiresIn *int `json:"expires_in,omitempty"`
	// The file to be uploaded. Can be a URL or a base64 encoded file.
	File string `json:"file"`
	// The name of the file to be uploaded. If not set a name will be generated.
	FileName *string `json:"file_name,omitempty"`
	// Whether to use high-resolution images for cropping and post-processing. (Latency penalty: ~7 seconds per page)
	HighResolution       *bool                 `json:"high_resolution,omitempty"`
	LlmProcessing        *LlmProcessing        `json:"llm_processing,omitempty"`
	OcrStrategy          *OcrStrategy          `json:"ocr_strategy,omitempty"`
	SegmentProcessing    *SegmentProcessing    `json:"segment_processing,omitempty"`
	SegmentationStrategy *SegmentationStrategy `json:"segmentation_strategy,omitempty"`
}

type GetTaskRouteRequest struct {
	// Whether to return base64 encoded URLs. If false, the URLs will be returned as presigned URLs.
	Base64Urls *bool `json:"-"`
	// Whether to include chunks in the output response
	IncludeChunks *bool `json:"-"`
}

type UpdateForm struct {
	ChunkProcessing *ChunkProcessing       `json:"chunk_processing,omitempty"`
	ErrorHandling   *ErrorHandlingStrategy `json:"error_handling,omitempty"`
	// The number of seconds until task is deleted.
	// Expired tasks can **not** be updated, polled or accessed via web interface.
	ExpiresIn *int `json:"expires_in,omitempty"`
	// Whether to use high-resolution images for cropping and post-processing. (Latency penalty: ~7 seconds per page)
	HighResolution       *bool                 `json:"high_resolution,omitempty"`
	LlmProcessing        *LlmProcessing        `json:"llm_processing,omitempty"`
	OcrStrategy          *OcrStrategy          `json:"ocr_strategy,omitempty"`
	SegmentProcessing    *SegmentProcessing    `json:"segment_processing,omitempty"`
	SegmentationStrategy *SegmentationStrategy `json:"segmentation_strategy,omitempty"`
}
